@page "/addbook"
<h1>Add A New Book in the Library</h1>
<div>
	<div class="form-group">
		<label>Book Title: </label>
		<input type="text" class="form-control" placeholder="Enter Title" @bind="title"/>
	</div>

	<div class="form-group">
		<label>Author: </label>
		<input type="text" class="form-control" placeholder="Enter Author" @bind="author" />
	</div>

	<div class="form-group">
		<label>Genre: </label>
		<input type="text" class="form-control" placeholder="Enter Genre" @bind="genre" />
	</div>

	<div class="form-group">
		<label>Quantity: </label>
		<input type="text" class="form-control" placeholder="Enter Quantity: must be number" @bind="quantity">
	</div>
	<div class="form-group">
		<button type="submit" class="btn btn-primary my-3 text-start" @onclick="CreateBook" >Create Book</button>
	</div>

</div>



@code{
	// used to navigate back to the Home page
	[Inject] NavigationManager NavigationManager { get; set; }
	private string title;
	private string author;
	private string genre;
	public string quantity;
	private Book book;

	/// <summary>
	/// Checks idf quantity entered is a positive number
	/// </summary>
	/// <returns></returns>
	/// <exception cref="Exception">Checks if the integer input is positive and whole</exception>
	private int CheckQuantity()
	{
		int intQuantity;
		if(Int32.TryParse(quantity, out intQuantity))
		{
			if (intQuantity >= 0)
			{
				return intQuantity;
			}
			else
			{
				throw new Exception("Quantity must be a positive integer");
			}
		}
		else
		{
			throw new Exception("Quantity must be a whole number");
		}

	}

	/// <summary>
	/// Creates a book if no exceptions and sets a success alert or Error alert if it fails
	/// </summary>
	/// <returns></returns>
	private async Task CreateBook()
	{
		try
		{
			BookManager.CreateBook(title, author, genre, CheckQuantity());
			title = null;
			author = null;
			genre = null;
			quantity = null;
			await App.Current.MainPage.DisplayAlert($"Success", $"Book Added to System", "OK");
			NavigationManager.NavigateTo("/books");
		}
		catch(Exception ex)
		{
			await App.Current.MainPage.DisplayAlert($"Error", $"{ex.Message}", "OK");
		}
	}
}