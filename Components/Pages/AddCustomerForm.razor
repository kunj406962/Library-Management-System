﻿@page "/addcustomer"
@using CPRG211FinalProject.Classes;

<h1>Add A New Customer in the Library</h1>
<div>
	<div class="form-group">
		<label>First Name: </label>
		<input type="text" class="form-control" placeholder="Enter First Name" @bind="customer.FirstName" />
	</div>

	<div class="form-group">
		<label>Last Name: </label>
		<input type="text" class="form-control" placeholder="Enter Last Name" @bind="customer.LastName" />
	</div>

	<div class="form-group">
		<label>Email: </label>
		<input type="text" class="form-control" placeholder="Enter Email" @bind="customer.Email" />
	</div>

	<div class="form-group">
		<label>Phone Number: </label>
		<input type="text" class="form-control" placeholder="Enter Phone Number" @bind="phone">
	</div>

	<div class="form-group">
		<button type="submit" class="btn btn-primary my-3 text-start" @onclick="() => AddCustomer(customer)">Add Customer</button>
	</div>

</div>

@code {
	[Inject] NavigationManager NavigationManager { get; set; }

	string phone;
	Customer customer = new Customer { CustomerID = CustomerManager.MakeId()};

	public async Task AddCustomer(Customer cus)
	{
		cus.Phone = phone;
		if (CustomerManager.CheckCustomer(cus))
		{
			await App.Current.MainPage.DisplayAlert($"Invalid", $"Please fill all fields", "OK");
			return;
		}

		if (!CustomerManager.IsValidEmail(cus.Email))
		{
			await App.Current.MainPage.DisplayAlert("Invalid Email", "Please enter a valid email address.", "OK");
			return;
		}

		if (!CustomerManager.IsValidPhone(phone))
		{
			await App.Current.MainPage.DisplayAlert("Invalid Phone", "Please enter a 10-digit phone number.", "OK");
			return;
		}

		cus.Phone = CustomerManager.FormatPhoneNumber(phone);
		DatabaseManager.AddCustomer(cus);

		await App.Current.MainPage.DisplayAlert($"Success", $"Customer Added to System", "OK");
		NavigationManager.NavigateTo("/customers");
	}
}